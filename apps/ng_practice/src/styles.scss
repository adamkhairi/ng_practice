
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ng_practice-primary: mat.define-palette(mat.$indigo-palette);
$ng_practice-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ng_practice-warn: mat.define-palette(mat.$orange-palette);
$ng_practice-error: mat.define-palette(mat.$red-palette);
$ng_practice-info: mat.define-palette(mat.$blue-palette);
$ng_practice-success: mat.define-palette(mat.$green-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ng_practice-theme: mat.define-light-theme((
  color: (
    primary: $ng_practice-primary,
    accent: $ng_practice-accent,
    warn: $ng_practice-warn,
          error:$ng_practice-error,
          info:$ng_practice-info,
          success:$ng_practice-success,
  )
));

$success-color: #4CAF50;
$error-color: #F44336;
$warn-color: #FBC02D;
$info-color: #2196F3;
$primary-color: #58B57D;
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($ng_practice-theme);

/* You can add global styles to this file, and also import other style files */
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

@import 'assets/scss';

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: 'Poppins', 'Helvetica Neue', sans-serif;
}

.bg-light {
  background-color: #fbfbfb;
}

// Contact page google map
.app-google-map {
  .map-container {
    width: 100% !important;
    height: 400px !important;
  }
}

.snackbar {
  max-width: 90% !important;
  margin-left: auto !important; // center align from left
  margin-right: auto !important; // center align from right
  margin-bottom: 1rem !important;
  padding: 10px !important; // spacing between the text and boundary
}

.snackbar.success {
  background-color: $success-color !important;
  color: white !important;

  .mat-button-wrapper {
    color: white !important; // action text color
  }
}

.snackbar.warning {
  background-color: $warn-color !important;
  color: white !important;

  .mat-button-wrapper {
    color: white !important; // action text color
  }
}

.snackbar.error {
  background-color: $error-color !important;
  color: white !important;

  .mat-button-wrapper {
    color: white !important; // action text color
  }
}

.snackbar.info {
  background-color: $info-color !important;
  color: white !important;

  .mat-button-wrapper {
    color: white !important; // action text color
  }
}
.spacer {
  flex: 1 1 auto;
}
.fit-screen-h{
  min-height: 100vh;
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
